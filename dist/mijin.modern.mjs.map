{"version":3,"file":"mijin.modern.mjs","sources":["../mijin.js"],"sourcesContent":["/**\r\n * @param {Function} into\r\n * @param {Function} what\r\n * @param {string} type\r\n * @param {boolean} customReturn\r\n */\r\nexport default (into, what, type = \"BEFORE\", customReturn = false) => {\r\n    if (!into || !what || !typeof what === 'function' || !typeof into === 'function') {\r\n        throw new Error(\"Invalid inject function usage!: invalid what or into\")\r\n    }\r\n\r\n    if(type === \"BEFORE\") {\r\n        if(!customReturn) {\r\n            return (...args) => {\r\n                what.apply(into, args)\r\n                return into.apply(into, args)\r\n            }\r\n        } else if(customReturn) {\r\n            return (...args) => {\r\n                const a = what.apply(into, args)\r\n                into.apply(into, args)\r\n                return a\r\n            }\r\n        }\r\n    } else if(type === \"AFTER\") {\r\n        if(!customReturn) {\r\n            return (...args) => {\r\n                const a = into.apply(into, args)\r\n                what.apply(into, args)\r\n                return a\r\n            }\r\n        } else if(customReturn) {\r\n            return (...args) => {\r\n\r\n                const a = what.apply(into, args)\r\n                into.apply(into, args)\r\n                return a\r\n            }\r\n        }\r\n    }\r\n\r\n}"],"names":["mijin","into","what","type","customReturn","Error","args","apply","a"],"mappings":"AAMA,IAAeA,EAAA,CAACC,EAAMC,EAAMC,EAAO,SAAUC,GAAe,KACxD,IAAKH,IAASC,EACV,UAAUG,MAAM,wDAGpB,GAAY,WAATF,EAAmB,CAClB,IAAIC,EACA,MAAO,IAAIE,KACPJ,EAAKK,MAAMN,EAAMK,GACVL,EAAKM,MAAMN,EAAMK,IAEtBF,GAAAA,EACN,MAAO,IAAIE,KACP,MAAME,EAAIN,EAAKK,MAAMN,EAAMK,GAE3B,OADAL,EAAKM,MAAMN,EAAMK,GACVE,EAGnB,MAAUL,GAAS,UAATA,EAAkB,CACxB,IAAIC,EACA,MAAO,IAAIE,KACP,MAAME,EAAIP,EAAKM,MAAMN,EAAMK,GAE3B,OADAJ,EAAKK,MAAMN,EAAMK,GACVE,MAELJ,EACN,MAAO,IAAIE,KAEP,MAAME,EAAIN,EAAKK,MAAMN,EAAMK,GAE3B,OADAL,EAAKM,MAAMN,EAAMK,GACVE,EAGnB,CAEH"}